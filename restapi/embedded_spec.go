// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/io.go-sample-api.v1+json"
  ],
  "produces": [
    "application/io.go-sample-api.v1+json"
  ],
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Basic API - HTTP and no Auth",
    "title": "go-sample-api",
    "version": "1.0.0"
  },
  "host": "virtserver.swaggerhub.com",
  "basePath": "/api/v1",
  "paths": {
    "/posts": {
      "get": {
        "description": "Get posts filtered by location",
        "tags": [
          "Query Posts"
        ],
        "summary": "Get Posts",
        "parameters": [
          {
            "name": "location",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Place"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          }
        }
      }
    },
    "/posts/messiest": {
      "get": {
        "description": "Get messiest posts filtered by location",
        "tags": [
          "Query Posts"
        ],
        "summary": "Get Messiest Posts",
        "parameters": [
          {
            "name": "location",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Place"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          }
        }
      }
    },
    "/posts/mostactive": {
      "get": {
        "description": "Get most active posts filtered by location",
        "tags": [
          "Query Posts"
        ],
        "summary": "Get Most Active Posts",
        "parameters": [
          {
            "name": "location",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Place"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          }
        }
      }
    },
    "/posts/newest": {
      "get": {
        "description": "Get newest posts filtered by location",
        "tags": [
          "Query Posts"
        ],
        "summary": "Get Newest Posts",
        "parameters": [
          {
            "name": "location",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Place"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          }
        }
      }
    },
    "/posts/tidiest": {
      "get": {
        "description": "Get tidiest posts filtered by location",
        "tags": [
          "Query Posts"
        ],
        "summary": "Get Tidiest Posts",
        "parameters": [
          {
            "name": "location",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Place"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          }
        }
      }
    },
    "/rates": {
      "get": {
        "description": "Get average rates filtered by location",
        "tags": [
          "Query Rates"
        ],
        "summary": "Get Rates. This will return rates from all reports.",
        "parameters": [
          {
            "name": "location",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Place"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          }
        }
      }
    },
    "/rates/{id}": {
      "get": {
        "description": "Get rates filtered by location. Raw query command will yield all rates provided by the users.",
        "tags": [
          "Query Rates"
        ],
        "summary": "Get Rates, Raw",
        "parameters": [
          {
            "name": "location",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Place"
            }
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/report": {
      "get": {
        "description": "Get reports",
        "tags": [
          "Report"
        ],
        "summary": "Get reports",
        "parameters": [
          {
            "name": "location",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Place"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          }
        }
      },
      "post": {
        "description": "Post a report",
        "tags": [
          "Report"
        ],
        "summary": "Post a report",
        "parameters": [
          {
            "name": "post",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "description": "Delete a report",
        "tags": [
          "Report"
        ],
        "summary": "Delete a report",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "description": "Update a report",
        "tags": [
          "Report"
        ],
        "summary": "Update a report",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "query"
          },
          {
            "name": "post",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "Coordinate": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "DiscussionThread": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Location": {
      "type": "object",
      "properties": {
        "coordinate": {
          "$ref": "#/definitions/Coordinate"
        },
        "place": {
          "$ref": "#/definitions/Place"
        }
      }
    },
    "Place": {
      "type": "object",
      "properties": {
        "is_in": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Post": {
      "type": "object",
      "properties": {
        "author": {
          "$ref": "#/definitions/User"
        },
        "discussion_thread": {
          "$ref": "#/definitions/DiscussionThread"
        },
        "gid": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "photo": {
          "type": "string",
          "format": "binary"
        },
        "rate": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rate"
          }
        }
      }
    },
    "Posts": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Post"
      }
    },
    "Rate": {
      "type": "object",
      "properties": {
        "author": {
          "$ref": "#/definitions/User"
        },
        "rate": {
          "type": "integer"
        },
        "rate_type": {
          "type": "string",
          "pattern": "good|bad"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/io.go-sample-api.v1+json"
  ],
  "produces": [
    "application/io.go-sample-api.v1+json"
  ],
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Basic API - HTTP and no Auth",
    "title": "go-sample-api",
    "version": "1.0.0"
  },
  "host": "virtserver.swaggerhub.com",
  "basePath": "/api/v1",
  "paths": {
    "/posts": {
      "get": {
        "description": "Get posts filtered by location",
        "tags": [
          "Query Posts"
        ],
        "summary": "Get Posts",
        "parameters": [
          {
            "name": "location",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Place"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          }
        }
      }
    },
    "/posts/messiest": {
      "get": {
        "description": "Get messiest posts filtered by location",
        "tags": [
          "Query Posts"
        ],
        "summary": "Get Messiest Posts",
        "parameters": [
          {
            "name": "location",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Place"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          }
        }
      }
    },
    "/posts/mostactive": {
      "get": {
        "description": "Get most active posts filtered by location",
        "tags": [
          "Query Posts"
        ],
        "summary": "Get Most Active Posts",
        "parameters": [
          {
            "name": "location",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Place"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          }
        }
      }
    },
    "/posts/newest": {
      "get": {
        "description": "Get newest posts filtered by location",
        "tags": [
          "Query Posts"
        ],
        "summary": "Get Newest Posts",
        "parameters": [
          {
            "name": "location",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Place"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          }
        }
      }
    },
    "/posts/tidiest": {
      "get": {
        "description": "Get tidiest posts filtered by location",
        "tags": [
          "Query Posts"
        ],
        "summary": "Get Tidiest Posts",
        "parameters": [
          {
            "name": "location",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Place"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          }
        }
      }
    },
    "/rates": {
      "get": {
        "description": "Get average rates filtered by location",
        "tags": [
          "Query Rates"
        ],
        "summary": "Get Rates. This will return rates from all reports.",
        "parameters": [
          {
            "name": "location",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Place"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          }
        }
      }
    },
    "/rates/{id}": {
      "get": {
        "description": "Get rates filtered by location. Raw query command will yield all rates provided by the users.",
        "tags": [
          "Query Rates"
        ],
        "summary": "Get Rates, Raw",
        "parameters": [
          {
            "name": "location",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Place"
            }
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/report": {
      "get": {
        "description": "Get reports",
        "tags": [
          "Report"
        ],
        "summary": "Get reports",
        "parameters": [
          {
            "name": "location",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Place"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          }
        }
      },
      "post": {
        "description": "Post a report",
        "tags": [
          "Report"
        ],
        "summary": "Post a report",
        "parameters": [
          {
            "name": "post",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "description": "Delete a report",
        "tags": [
          "Report"
        ],
        "summary": "Delete a report",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "description": "Update a report",
        "tags": [
          "Report"
        ],
        "summary": "Update a report",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "query"
          },
          {
            "name": "post",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "Coordinate": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "DiscussionThread": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Location": {
      "type": "object",
      "properties": {
        "coordinate": {
          "$ref": "#/definitions/Coordinate"
        },
        "place": {
          "$ref": "#/definitions/Place"
        }
      }
    },
    "Place": {
      "type": "object",
      "properties": {
        "is_in": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Post": {
      "type": "object",
      "properties": {
        "author": {
          "$ref": "#/definitions/User"
        },
        "discussion_thread": {
          "$ref": "#/definitions/DiscussionThread"
        },
        "gid": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "photo": {
          "type": "string",
          "format": "binary"
        },
        "rate": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rate"
          }
        }
      }
    },
    "Posts": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Post"
      }
    },
    "Rate": {
      "type": "object",
      "properties": {
        "author": {
          "$ref": "#/definitions/User"
        },
        "rate": {
          "type": "integer"
        },
        "rate_type": {
          "type": "string",
          "pattern": "good|bad"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        }
      }
    }
  }
}`))
}
