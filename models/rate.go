// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Rate rate
// swagger:model Rate
type Rate struct {

	// author
	Author *User `json:"author,omitempty"`

	// rate
	Rate int64 `json:"rate,omitempty"`

	// rate type
	// Pattern: good|bad
	RateType string `json:"rate_type,omitempty"`
}

// Validate validates this rate
func (m *Rate) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAuthor(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Rate) validateAuthor(formats strfmt.Registry) error {

	if swag.IsZero(m.Author) { // not required
		return nil
	}

	if m.Author != nil {
		if err := m.Author.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("author")
			}
			return err
		}
	}

	return nil
}

func (m *Rate) validateRateType(formats strfmt.Registry) error {

	if swag.IsZero(m.RateType) { // not required
		return nil
	}

	if err := validate.Pattern("rate_type", "body", string(m.RateType), `good|bad`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Rate) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Rate) UnmarshalBinary(b []byte) error {
	var res Rate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
