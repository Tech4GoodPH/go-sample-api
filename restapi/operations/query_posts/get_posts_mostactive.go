// Code generated by go-swagger; DO NOT EDIT.

package query_posts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetPostsMostactiveHandlerFunc turns a function with the right signature into a get posts mostactive handler
type GetPostsMostactiveHandlerFunc func(GetPostsMostactiveParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetPostsMostactiveHandlerFunc) Handle(params GetPostsMostactiveParams) middleware.Responder {
	return fn(params)
}

// GetPostsMostactiveHandler interface for that can handle valid get posts mostactive params
type GetPostsMostactiveHandler interface {
	Handle(GetPostsMostactiveParams) middleware.Responder
}

// NewGetPostsMostactive creates a new http.Handler for the get posts mostactive operation
func NewGetPostsMostactive(ctx *middleware.Context, handler GetPostsMostactiveHandler) *GetPostsMostactive {
	return &GetPostsMostactive{Context: ctx, Handler: handler}
}

/*GetPostsMostactive swagger:route GET /posts/mostactive Query Posts getPostsMostactive

Get Most Active Posts

Get most active posts filtered by location

*/
type GetPostsMostactive struct {
	Context *middleware.Context
	Handler GetPostsMostactiveHandler
}

func (o *GetPostsMostactive) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetPostsMostactiveParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
