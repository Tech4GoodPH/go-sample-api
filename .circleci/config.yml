version: 2.1
jobs:
  test-unit:
    docker: 
      - image: golang:1.12.6-alpine
    steps:
      - checkout
      - run:
          name: Unit Test
          command: |
            echo 'Running Unit tests'
            apk add gcc && apk add musl-dev
            go test -mod=vendor ./test
  # test-lint-2:
  #   docker: 
  #     - image: golang:1.12.6-alpine # the primary container, where your job's commands are run
  #   steps:
  #     - checkout # check out the code in the project directory
  #     - run:
  #         name: Lint Test 2.0
  #         command: |
  #           echo 'Running Lint tests'
  #           apk add bash
  #           ./bin/golangci-lint-v1.17.1 run -c config/.golangci.yml
  test-lint:
      docker: 
        - image: golangci/golangci-lint:v1.17.1
      steps:
        - checkout 
        - run:
            name: Lint Test
            command: |
              echo 'Running Lint tests 2'
              /usr/bin/golangci-lint run -c config/.golangci.yml
  build:  
    docker:
      - image: docker:18.09.9-git
    steps:
      - checkout
      - setup_remote_docker
      - run: 
          name: Build App
          command: |
            echo "Building application image"
            docker login --username=$DOCKER_USER --password=$DOCKER_PASS
            docker pull tech4goodph/bayanihan-basurahan-api:latest
            docker build -t tech4goodph/bayanihan-basurahan-api:latest .
            docker push tech4goodph/bayanihan-basurahan-api:latest
  deploy: 
    docker:
      - image: alpine:3.10.2
    steps:
      - checkout
      - run: 
          name: Deploy App
          command: |
            echo "Deploying application"
            apk add openssh
            scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null /root/project/docker-compose.yaml root@206.189.38.16:/root
            ssh -o StrictHostKeyChecking=no root@206.189.38.16 "docker-compose rm -f &&
              docker-compose pull &&
              docker-compose up --build -d"
workflows:
  version: 2
  test_build_deploy:
    jobs:
      - test-unit
      - test-lint
      - build:
          filters:
            branches:
              only: master
          requires:
            - test-unit
            - test-lint
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master